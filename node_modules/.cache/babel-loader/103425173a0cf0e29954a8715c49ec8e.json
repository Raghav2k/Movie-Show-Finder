{"ast":null,"code":"var _jsxFileName = \"/Users/raghavsharma/movie-library/src/components/Results/index.js\";\nimport React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Details from '../Details';\nimport { Link } from 'react-router-dom';\nimport './styles.css';\n\nclass Results extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchData = async () => {\n      let url = '';\n\n      if (this.props.is_query_movie) {\n        url = 'https://api.themoviedb.org/3/search/movie?api_key=4f02959b89ceb660d5b1018f517488de&query='.concat(this.props.query).concat('&page=').concat(this.state.current_page);\n      } else {\n        url = 'https://api.themoviedb.org/3/search/tv?api_key=4f02959b89ceb660d5b1018f517488de&language=en-US&page=1&query='.concat(this.props.query).concat('&include_adult=false&page=').concat(this.state.current_page);\n      }\n\n      const response = await fetch(url);\n      const data = await response.json();\n      this.setState({\n        result: data.results,\n        loading: false\n      });\n      this.setState({\n        page_count: Math.ceil(data.total_results / data.total_pages)\n      });\n    };\n\n    this.nextPage = () => {\n      if (this.state.result.length !== 0) {\n        this.setState({\n          current_page: this.state.current_page += 1\n        }, () => this.fetchData());\n      }\n    };\n\n    this.prevPage = () => {\n      if (this.state.result.length !== 0 && this.state.current_page !== 1) {\n        this.setState({\n          current_page: this.state.current_page -= 1\n        }, () => this.fetchData());\n      }\n    };\n\n    this.getSearchID = value => () => {\n      this.setState({\n        id_val: value\n      });\n    };\n\n    this.changeView = () => {\n      this.setState({\n        display: false\n      });\n    };\n\n    this.state = {\n      result: [],\n      loading: false,\n      is_query_movie: this.props.is_query_movie,\n      offset: 0,\n      per_page: 0,\n      current_page: 1,\n      page_count: 0,\n      id_val: 0,\n      display: this.props.display\n    };\n  }\n\n  async componentDidUpdate(prevProps) {\n    this.setState({\n      display: true\n    });\n\n    if (prevProps.query !== this.props.query || prevProps.is_query_movie !== this.props.is_query_movie) {\n      this.fetchData();\n    }\n  }\n\n  render() {\n    var img_url = 'https://image.tmdb.org/t/p/w300';\n    let hasPoster = this.state.result.filter(function (e) {\n      return e.poster_path !== null;\n    });\n\n    if (this.state.loading || !this.state.movies) {\n      console.log('Loading');\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, this.state.display ? /*#__PURE__*/React.createElement(Container, {\n      className: \"background\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, hasPoster.map(movie => /*#__PURE__*/React.createElement(Col, {\n      key: movie.id,\n      className: \"Posters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: `/details/${movie.id}`,\n        aboutProps: {\n          id: movie.id,\n          type: this.props.is_query_movie\n        }\n      },\n      onClick: this.changeView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: img_url.concat(movie.poster_path),\n      alt: \"Posters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"MovieName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }, \" \", movie.name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"MovieTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, \" \", movie.title)))), /*#__PURE__*/React.createElement(Row, {\n      className: \"navigate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.nextPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }, \"Next\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.prevPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, \"Previous\")))) : null);\n  }\n\n}\n\n;\nexport default Results;","map":{"version":3,"sources":["/Users/raghavsharma/movie-library/src/components/Results/index.js"],"names":["React","Container","Row","Col","Details","Link","Results","Component","constructor","props","fetchData","url","is_query_movie","concat","query","state","current_page","response","fetch","data","json","setState","result","results","loading","page_count","Math","ceil","total_results","total_pages","nextPage","length","prevPage","getSearchID","value","id_val","changeView","display","offset","per_page","componentDidUpdate","prevProps","render","img_url","hasPoster","filter","e","poster_path","movies","console","log","map","movie","id","pathname","aboutProps","type","name","title"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Details from '../Details'\nimport {Link} from 'react-router-dom'\nimport './styles.css'\n\n\nclass Results extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            result: [],\n            loading: false,\n            is_query_movie: this.props.is_query_movie,\n            offset: 0,\n            per_page: 0,\n            current_page: 1,\n            page_count: 0,\n            id_val: 0,\n            display: this.props.display\n        }\n}\n    async componentDidUpdate(prevProps){\n        this.setState({display:true})\n        if(prevProps.query !== this.props.query || prevProps.is_query_movie !== this.props.is_query_movie){\n            this.fetchData()\n        }\n    }\n\n    fetchData = async () => {\n            let url = ''\n            if(this.props.is_query_movie){\n                url = 'https://api.themoviedb.org/3/search/movie?api_key=4f02959b89ceb660d5b1018f517488de&query='.concat(this.props.query).concat('&page=').concat(this.state.current_page);\n                \n            }\n            else{\n                url = 'https://api.themoviedb.org/3/search/tv?api_key=4f02959b89ceb660d5b1018f517488de&language=en-US&page=1&query='.concat(this.props.query).concat('&include_adult=false&page=').concat(this.state.current_page)\n            }\n            const response = await fetch (url);\n            const data = await response.json();\n            this.setState({result: data.results, loading:false});\n            this.setState({page_count: Math.ceil(data.total_results/data.total_pages)})\n    }\n\n\n    nextPage = () => {\n\n        if(this.state.result.length !== 0){\n            this.setState({current_page: this.state.current_page+=1}, () => this.fetchData())\n        }\n    }\n\n    prevPage = () => {\n        if(this.state.result.length !== 0 && this.state.current_page !== 1){\n            this.setState({current_page: this.state.current_page-=1}, () => this.fetchData())\n        }\n    }\n    getSearchID = value => () => {\n        this.setState({id_val: value})\n    }\n\n    changeView = () => {\n        this.setState({display:false})\n    }\n\n    render(){\n            var img_url = 'https://image.tmdb.org/t/p/w300';\n            let hasPoster = this.state.result.filter(function (e) {\n                return e.poster_path !== null;\n            });\n            if(this.state.loading || !this.state.movies){\n                console.log('Loading')\n            }\n            return(\n            <div>\n                {this.state.display ?\n                <Container className = 'background'>\n                <Row>\n                {hasPoster.map(movie => (\n                    <Col key = {movie.id} className = 'Posters'>\n                        <Link to={{\n                            pathname:`/details/${movie.id}`,\n                            aboutProps: {\n                                id: movie.id,\n                                type: this.props.is_query_movie\n                            }\n                        }} onClick={this.changeView}> \n                            <img  src = {img_url.concat(movie.poster_path)} alt = 'Posters' /> \n                        </Link>\n                        <p className = 'MovieName'> {movie.name}</p>\n                        <p className = 'MovieTitle'> {movie.title}</p>\n                    </Col>\n                ))}\n                </Row>\n                \n                <Row className='navigate'>\n                    <Col>\n                        <button onClick={this.nextPage}>Next</button>\n                    </Col>\n                    <Col>\n                        <button onClick={this.prevPage}>Previous</button>\n                    </Col>\n                </Row>\n            </Container>\n            : null}\n            </div>\n        )\n    }\n};\n\nexport default Results;"]},"metadata":{},"sourceType":"module"}