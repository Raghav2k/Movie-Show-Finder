{"ast":null,"code":"var _jsxFileName = \"/Users/raghavsharma/movie-library/src/components/Results/index.js\";\nimport React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { Link } from 'react-router-dom';\nimport './styles.css';\n\nclass Results extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: [],\n      loading: false,\n      is_query_movie: this.props.is_query_movie,\n      total_results: 0\n    };\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (prevProps.query !== this.props.query || prevProps.is_query_movie !== this.props.is_query_movie) {\n      if (this.props.is_query_movie) {\n        const url = 'https://api.themoviedb.org/3/search/movie?api_key=4f02959b89ceb660d5b1018f517488de&query='.concat(this.props.query);\n        const response = await fetch(url);\n        const data = await response.json();\n        this.setState({\n          result: data.results,\n          loading: false,\n          total_results: data.total_results\n        });\n      } else {\n        const url = 'https://api.themoviedb.org/3/search/tv?api_key=4f02959b89ceb660d5b1018f517488de&language=en-US&page=1&query='.concat(this.props.query).concat('&include_adult=false');\n        const response = await fetch(url);\n        const data = await response.json();\n        this.setState({\n          result: data.results,\n          loading: false,\n          total_results: data.total_results\n        });\n      }\n    }\n  }\n\n  render() {\n    if (this.state.loading || !this.state.movies) {\n      console.log('');\n    } else if (this.state.total_results === 0) {\n      return null;\n    } else {\n      console.log(this.state.result);\n      var img_url = 'https://image.tmdb.org/t/p/w300';\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        className: \"background\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }\n      }, \"Found \", this.state.total_results, \" Results\")), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }, this.state.result.map(movie => /*#__PURE__*/React.createElement(Col, {\n        key: movie.id,\n        className: \"Posters\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/query\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"trending\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: img_url.concat(movie.poster_path),\n        alt: \"Posters\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 33\n        }\n      }))), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"MovieName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }\n      }, \" \", movie.name), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"MovieTitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }\n      }, \" \", movie.title))))));\n    }\n  }\n\n}\n\n;\nexport default Results;","map":{"version":3,"sources":["/Users/raghavsharma/movie-library/src/components/Results/index.js"],"names":["React","Container","Row","Col","Link","Results","Component","constructor","props","state","result","loading","is_query_movie","total_results","componentDidUpdate","prevProps","query","url","concat","response","fetch","data","json","setState","results","render","movies","console","log","img_url","map","movie","id","poster_path","name","title"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport {Link} from 'react-router-dom'\nimport './styles.css'\n\n\nclass Results extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            result: [],\n            loading: false,\n            is_query_movie: this.props.is_query_movie,\n            total_results: 0\n        }\n}\n    async componentDidUpdate(prevProps){\n        if(prevProps.query !== this.props.query || prevProps.is_query_movie !== this.props.is_query_movie){\n            if(this.props.is_query_movie){\n                const url = 'https://api.themoviedb.org/3/search/movie?api_key=4f02959b89ceb660d5b1018f517488de&query='.concat(this.props.query);\n                const response = await fetch (url);\n                const data = await response.json();\n                this.setState({result: data.results, loading:false, total_results: data.total_results});\n            }\n            else{\n                const url = 'https://api.themoviedb.org/3/search/tv?api_key=4f02959b89ceb660d5b1018f517488de&language=en-US&page=1&query='.concat(this.props.query).concat('&include_adult=false')\n                const response = await fetch (url);\n                const data = await response.json();\n                this.setState({result: data.results, loading:false, total_results: data.total_results});\n            }       \n        }\n    }\n    render(){\n            if(this.state.loading || !this.state.movies){\n                    console.log('')\n            }\n            else if(this.state.total_results === 0){\n                return null\n            }\n            else{\n            console.log(this.state.result)\n            var img_url = 'https://image.tmdb.org/t/p/w300';\n                return(\n                <div>\n                    <Container className = 'background'>\n                        <Row>\n                            <Col>\n                                Found {this.state.total_results} Results\n                            </Col>    \n                        </Row> \n                    <Row>\n                    {this.state.result.map(movie => (\n                        <Col key = {movie.id} className = 'Posters'> \n                            <Link to='/query'>\n                            <button className = 'trending'>\n                                <img  src = {img_url.concat(movie.poster_path)} alt = 'Posters' /> \n                            </button>\n                            </Link>\n                            <p className = 'MovieName'> {movie.name}</p>\n                            <p className = 'MovieTitle'> {movie.title}</p>\n                        </Col>\n                    ))}\n                    </Row>\n                </Container>\n                </div>\n            )\n        }\n    }\n};\n\nexport default Results;"]},"metadata":{},"sourceType":"module"}