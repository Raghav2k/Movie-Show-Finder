{"ast":null,"code":"var _jsxFileName = \"/Users/raghavsharma/movie-library/src/components/Details/index.js\";\nimport React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport './styles.css';\nimport ReactPlayer from \"react-player\";\nimport { Link } from 'react-router-dom';\n\nclass Details extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.id,\n      details: [],\n      video_results: {},\n      cast: [],\n      crew_memebers: []\n    };\n  }\n\n  async componentDidMount() {\n    const url = 'https://api.themoviedb.org/3/movie/'.concat(this.state.id).concat('?api_key=4f02959b89ceb660d5b1018f517488de&language=en-US&append_to_response=videos');\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      details: data\n    });\n    this.setState({\n      video_results: data.videos.results\n    });\n    const cast_url = 'https://api.themoviedb.org/3/movie/'.concat(this.state.id).concat('/credits?api_key=4f02959b89ceb660d5b1018f517488de');\n    const response_cast = await fetch(cast_url);\n    const data_cast = await response_cast.json();\n    this.setState({\n      cast: data_cast.cast\n    });\n    this.setState({\n      crew_memebers: data_cast.crew\n    });\n  }\n\n  render() {\n    const trailer_link = 'https://www.youtube.com/watch?v=';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"movie_title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }, this.state.details.original_title))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, \"Directed By:\", this.state.crew_memebers.map(crew => crew.job === 'Director' ? /*#__PURE__*/React.createElement(\"p1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 54\n      }\n    }, \" \", crew.name, \" \") : null)), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    }, \" Release Date: \", this.state.details.release_date)), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    }, \" Runtime: \", this.state.details.runtime, \" min\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, this.state.details.genres.length > 0 ? this.state.details.genres.map(types => /*#__PURE__*/React.createElement(\"p1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 33\n      }\n    }, \" \", types.id, \" \")) : null)), /*#__PURE__*/React.createElement(Row, {\n      className: \"detail_page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, this.state.video_results.length > 0 ? this.state.video_results.map(vids => vids.type === \"Trailer\" ? /*#__PURE__*/React.createElement(ReactPlayer, {\n      className: \"trailer\",\n      url: trailer_link.concat(vids.key),\n      controls: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 55\n      }\n    }) : null) : null), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p1\", {\n      className: \"overview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, this.state.details.overview))));\n  }\n\n}\n\n;\nexport default Details;","map":{"version":3,"sources":["/Users/raghavsharma/movie-library/src/components/Details/index.js"],"names":["React","Container","Row","Col","ReactPlayer","Link","Details","Component","constructor","props","state","id","details","video_results","cast","crew_memebers","componentDidMount","url","concat","response","fetch","data","json","setState","videos","results","cast_url","response_cast","data_cast","crew","render","trailer_link","original_title","map","job","name","release_date","runtime","genres","length","types","vids","type","key","overview"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport './styles.css'\nimport ReactPlayer from \"react-player\"\nimport { Link } from 'react-router-dom'\n\n\nclass Details extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            id: this.props.id,\n            details: [],\n            video_results: {},\n            cast: [],\n            crew_memebers: []\n        }\n    }\n\n    async componentDidMount(){\n        const url = 'https://api.themoviedb.org/3/movie/'.concat(this.state.id).concat('?api_key=4f02959b89ceb660d5b1018f517488de&language=en-US&append_to_response=videos');\n        const response = await fetch(url);\n        const data = await response.json();\n        this.setState({details: data});\n        this.setState({video_results: data.videos.results})\n        const cast_url = 'https://api.themoviedb.org/3/movie/'.concat(this.state.id).concat('/credits?api_key=4f02959b89ceb660d5b1018f517488de');\n        const response_cast = await fetch(cast_url);\n        const data_cast = await response_cast.json();\n        this.setState({cast: data_cast.cast})\n        this.setState({crew_memebers: data_cast.crew})\n    }\n\n    render(){\n        const trailer_link = 'https://www.youtube.com/watch?v='\n        return(\n            <div>\n                <Row className='movie_title'> \n                    <Col>\n                        <h1>{this.state.details.original_title}</h1> \n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col>\n                        Directed By: \n                        {this.state.crew_memebers.map(crew => \n                            crew.job === 'Director'? <p1> {crew.name} </p1>: null\n                        )}\n                    </Col>\n                    <Col>\n                            <p1> Release Date: {this.state.details.release_date}</p1>\n                    </Col> \n                    <Col>\n                            <p1> Runtime: {this.state.details.runtime} min</p1>\n                    </Col>   \n                    \n                </Row>\n\n                <Row> \n                    <Col>\n                            {this.state.details.genres.length > 0 ? this.state.details.genres.map(types => \n                                <p1> {types.id} </p1>   \n                            ) : null}\n                    </Col>\n                    \n                </Row> \n\n\n\n\n\n\n\n\n\n                <Row className='detail_page'>\n                    <Col> \n                        {this.state.video_results.length > 0 ? this.state.video_results.map(vids =>\n                            vids.type === \"Trailer\" ? <ReactPlayer className = 'trailer' url={trailer_link.concat(vids.key)} controls={true}/> : null\n                        ) : null}\n                    </Col>\n\n                    <Col>\n                        <p1 className='overview'>{this.state.details.overview}</p1>\n                    </Col>\n                </Row>\n            </div>\n        )\n\n    }\n};\n\n\nexport default Details;"]},"metadata":{},"sourceType":"module"}