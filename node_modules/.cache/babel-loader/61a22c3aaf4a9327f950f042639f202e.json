{"ast":null,"code":"var _jsxFileName = \"/Users/raghavsharma/movie-library/src/components/Details/index.js\";\nimport React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport './styles.css';\nimport ReactPlayer from \"react-player\";\nimport { Link } from 'react-router-dom';\n\nclass Details extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.id,\n      details: [],\n      video_results: {},\n      cast: [],\n      crew_memebers: [],\n      genres: {}\n    };\n  }\n\n  async componentDidMount() {\n    const url = 'https://api.themoviedb.org/3/movie/'.concat(this.state.id).concat('?api_key=4f02959b89ceb660d5b1018f517488de&language=en-US&append_to_response=videos');\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      details: data\n    });\n    this.setState({\n      video_results: data.videos.results\n    });\n    const cast_url = 'https://api.themoviedb.org/3/movie/'.concat(this.state.id).concat('/credits?api_key=4f02959b89ceb660d5b1018f517488de');\n    const response_cast = await fetch(cast_url);\n    const data_cast = await response_cast.json();\n    this.setState({\n      cast: data_cast.cast\n    });\n    this.setState({\n      crew_memebers: data_cast.crew\n    });\n    this.setState({\n      genres: data.genres\n    });\n  }\n\n  render() {\n    const trailer_link = 'https://www.youtube.com/watch?v=';\n    let profilePic = this.state.cast.filter(function (e) {\n      return e.profile_path !== null;\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"detail_background\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"movie_title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }, this.state.details.original_title))), /*#__PURE__*/React.createElement(Row, {\n      className: \"movie_details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, \"Directed By:\", this.state.crew_memebers.map(crew => crew.job === 'Director' ? /*#__PURE__*/React.createElement(\"p1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 54\n      }\n    }, \" \", crew.name, \" \") : null)), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    }, \" Release Date: \", this.state.details.release_date)), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }\n    }, \" Runtime: \", this.state.details.runtime, \" min\"))), /*#__PURE__*/React.createElement(Row, {\n      className: \"genres\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, \"Genre:\", this.state.genres.length > 0 ? this.state.genres.map(genre => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }, \" \", genre.name, \" \")) : null)), /*#__PURE__*/React.createElement(Row, {\n      className: \"overview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p1\", {\n      className: \"overview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, \" Overview: \", this.state.details.overview))), /*#__PURE__*/React.createElement(Row, {\n      className: \"PosterPath\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: 'https://image.tmdb.org/t/p/w200'.concat(this.state.details.poster_path),\n      alt: \"Poster\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      className: \"cast\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, profilePic.slice(0, 9).map(actor => /*#__PURE__*/React.createElement(\"li\", {\n      className: \"names\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, actor.name, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"cast_pics\",\n      src: 'https://image.tmdb.org/t/p/w300'.concat(actor.profile_path),\n      alt: \"Cast Pictures\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      className: \"detail_page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, this.state.video_results.length > 0 ? this.state.video_results.map(vids => vids.type == 'Trailer' ? /*#__PURE__*/React.createElement(ReactPlayer, {\n      className: \"trailer\",\n      url: trailer_link.concat(vids.key),\n      controls: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 54\n      }\n    }) : null) : null));\n  }\n\n}\n\n;\nexport default Details;","map":{"version":3,"sources":["/Users/raghavsharma/movie-library/src/components/Details/index.js"],"names":["React","Container","Row","Col","ReactPlayer","Link","Details","Component","constructor","props","state","id","details","video_results","cast","crew_memebers","genres","componentDidMount","url","concat","response","fetch","data","json","setState","videos","results","cast_url","response_cast","data_cast","crew","render","trailer_link","profilePic","filter","e","profile_path","original_title","map","job","name","release_date","runtime","length","genre","overview","poster_path","slice","actor","vids","type","key"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport './styles.css'\nimport ReactPlayer from \"react-player\"\nimport { Link } from 'react-router-dom'\n\n\nclass Details extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            id: this.props.id,\n            details: [],\n            video_results: {},\n            cast: [],\n            crew_memebers: [],\n            genres: {}\n        }\n    }\n\n    async componentDidMount(){\n        const url = 'https://api.themoviedb.org/3/movie/'.concat(this.state.id).concat('?api_key=4f02959b89ceb660d5b1018f517488de&language=en-US&append_to_response=videos');\n        const response = await fetch(url);\n        const data = await response.json();\n        this.setState({details: data});\n        this.setState({video_results: data.videos.results})\n        const cast_url = 'https://api.themoviedb.org/3/movie/'.concat(this.state.id).concat('/credits?api_key=4f02959b89ceb660d5b1018f517488de');\n        const response_cast = await fetch(cast_url);\n        const data_cast = await response_cast.json();\n        this.setState({cast: data_cast.cast})\n        this.setState({crew_memebers: data_cast.crew})\n        this.setState({genres: data.genres});\n    }\n\n    render(){\n        const trailer_link = 'https://www.youtube.com/watch?v='\n        let profilePic = this.state.cast.filter(function (e) {\n            return e.profile_path !== null;\n        });\n        return(\n            <div className = 'detail_background'>\n                <Row className='movie_title'> \n                    <Col>\n                        <h1>{this.state.details.original_title}</h1> \n                    </Col>\n                </Row>\n\n                <Row className= 'movie_details'>\n                    <Col>\n                        Directed By: \n                        {this.state.crew_memebers.map(crew => \n                            crew.job === 'Director'? <p1> {crew.name} </p1>: null\n                        )}\n                    </Col>\n                    <Col>\n                            <p1> Release Date: {this.state.details.release_date}</p1>\n                    </Col> \n                    <Col>\n                            <p1> Runtime: {this.state.details.runtime} min</p1>\n                    </Col>   \n                    \n                </Row>\n\n                <Row className='genres'> \n                    <Col>\n                        Genre: \n                        {this.state.genres.length > 0 ? this.state.genres.map(genre =>\n                            <li> {genre.name} </li> \n                        ) : null}\n                    </Col>\n                    \n                </Row> \n\n                <Row  className='overview'>\n                    <Col>\n                        <p1 className='overview'> Overview: {this.state.details.overview}</p1>\n                    </Col>\n                </Row> \n\n                <Row className='PosterPath'>\n                    <img src={'https://image.tmdb.org/t/p/w200'.concat(this.state.details.poster_path)} alt='Poster' />\n                </Row>\n\n                <Row className='cast'> \n                        {profilePic.slice(0,9).map(actor => (\n                            <li className='names'>{actor.name}\n                            <img className='cast_pics' src={'https://image.tmdb.org/t/p/w300'.concat(actor.profile_path)} alt='Cast Pictures' />\n                            </li>\n                        ))}\n                </Row>\n\n                <Row className='detail_page'>\n                        {this.state.video_results.length > 0 ? this.state.video_results.map(vids =>\n                            vids.type == 'Trailer' ? <ReactPlayer className = 'trailer' url={trailer_link.concat(vids.key)} controls={true}/> : null\n                        ) : null}\n                </Row>\n            </div>\n        )\n\n    }\n};\n\n\nexport default Details;"]},"metadata":{},"sourceType":"module"}