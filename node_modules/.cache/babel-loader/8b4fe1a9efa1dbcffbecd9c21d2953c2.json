{"ast":null,"code":"var _jsxFileName = \"/Users/raghavsharma/movie-library/src/components/Results/index.js\";\nimport React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Details from '../Details';\nimport './styles.css';\n\nclass Results extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchData = async () => {\n      let url = '';\n      console.log(this.props.is_query_movie);\n\n      if (!this.props.is_query_movie) {\n        url = 'https://api.themoviedb.org/3/search/movie?api_key=4f02959b89ceb660d5b1018f517488de&query='.concat(this.props.query).concat('&page=').concat(this.state.current_page);\n      } else {\n        url = 'https://api.themoviedb.org/3/search/tv?api_key=4f02959b89ceb660d5b1018f517488de&language=en-US&page=1&query='.concat(this.props.query).concat('&include_adult=false&page=').concat(this.state.current_page);\n      }\n\n      const response = await fetch(url);\n      const data = await response.json();\n      this.setState({\n        result: data.results,\n        loading: false\n      });\n      this.setState({\n        page_count: Math.ceil(data.total_results / data.total_pages)\n      });\n    };\n\n    this.nextPage = () => {\n      if (this.state.result.length !== 0) {\n        this.setState({\n          current_page: this.state.current_page += 1\n        }, () => this.fetchData());\n      }\n    };\n\n    this.prevPage = () => {\n      if (this.state.result.length !== 0 && this.state.current_page !== 1) {\n        this.setState({\n          current_page: this.state.current_page -= 1\n        }, () => this.fetchData());\n      }\n    };\n\n    this.getSearchID = value => () => {\n      this.setState({\n        id_val: value\n      });\n    };\n\n    this.state = {\n      result: [],\n      loading: false,\n      is_query_movie: this.props.is_query_movie,\n      offset: 0,\n      per_page: 0,\n      current_page: 1,\n      page_count: 0,\n      display: this.props.display,\n      id_val: 0\n    };\n  }\n\n  async componentDidUpdate() {\n    let url = '';\n    console.log(this.props.is_query_movie);\n\n    if (!this.props.is_query_movie) {\n      url = 'https://api.themoviedb.org/3/search/movie?api_key=4f02959b89ceb660d5b1018f517488de&query='.concat(this.props.query).concat('&page=').concat(this.state.current_page);\n    } else {\n      url = 'https://api.themoviedb.org/3/search/tv?api_key=4f02959b89ceb660d5b1018f517488de&language=en-US&page=1&query='.concat(this.props.query).concat('&include_adult=false&page=').concat(this.state.current_page);\n    }\n\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      result: data.results,\n      loading: false\n    });\n    this.setState({\n      page_count: Math.ceil(data.total_results / data.total_pages)\n    });\n  }\n\n  render() {\n    var img_url = 'https://image.tmdb.org/t/p/w300';\n    let hasPoster = this.state.result.filter(function (e) {\n      return e.poster_path !== null;\n    });\n\n    if (this.state.loading || !this.state.movies) {\n      console.log('Loading');\n    }\n\n    if (this.state.id_val !== 0) {\n      return /*#__PURE__*/React.createElement(Details, {\n        id: this.state.id_val,\n        type: this.props.is_query_movie,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        className: \"background\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }, hasPoster.map(movie => /*#__PURE__*/React.createElement(Col, {\n        key: movie.id,\n        className: \"Posters\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"trending\",\n        onClick: this.getSearchID(movie.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: img_url.concat(movie.poster_path),\n        alt: \"Posters\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"MovieName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }\n      }, \" \", movie.name), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"MovieTitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }\n      }, \" \", movie.title)))), this.props.display ? /*#__PURE__*/React.createElement(Row, {\n        className: \"navigate\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.nextPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }\n      }, \"Next\")), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.prevPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }\n      }, \"Previous\"))) : null));\n    }\n  }\n\n}\n\n;\nexport default Results;","map":{"version":3,"sources":["/Users/raghavsharma/movie-library/src/components/Results/index.js"],"names":["React","Container","Row","Col","Details","Results","Component","constructor","props","fetchData","url","console","log","is_query_movie","concat","query","state","current_page","response","fetch","data","json","setState","result","results","loading","page_count","Math","ceil","total_results","total_pages","nextPage","length","prevPage","getSearchID","value","id_val","offset","per_page","display","componentDidUpdate","render","img_url","hasPoster","filter","e","poster_path","movies","map","movie","id","name","title"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Details from '../Details'\nimport './styles.css'\n\n\nclass Results extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            result: [],\n            loading: false,\n            is_query_movie: this.props.is_query_movie,\n            offset: 0,\n            per_page: 0,\n            current_page: 1,\n            page_count: 0,\n            display: this.props.display,\n            id_val: 0\n        }\n}\n    async componentDidUpdate(){\n        let url = ''\n            console.log(this.props.is_query_movie);\n            if(!this.props.is_query_movie){\n                url = 'https://api.themoviedb.org/3/search/movie?api_key=4f02959b89ceb660d5b1018f517488de&query='.concat(this.props.query).concat('&page=').concat(this.state.current_page);\n                \n            }\n            else{\n                url = 'https://api.themoviedb.org/3/search/tv?api_key=4f02959b89ceb660d5b1018f517488de&language=en-US&page=1&query='.concat(this.props.query).concat('&include_adult=false&page=').concat(this.state.current_page)\n            }\n            const response = await fetch (url);\n            const data = await response.json();\n            this.setState({result: data.results, loading:false});\n            this.setState({page_count: Math.ceil(data.total_results/data.total_pages)})\n    }\n\n    fetchData = async () => {\n            let url = ''\n            console.log(this.props.is_query_movie);\n            if(!this.props.is_query_movie){\n                url = 'https://api.themoviedb.org/3/search/movie?api_key=4f02959b89ceb660d5b1018f517488de&query='.concat(this.props.query).concat('&page=').concat(this.state.current_page);\n                \n            }\n            else{\n                url = 'https://api.themoviedb.org/3/search/tv?api_key=4f02959b89ceb660d5b1018f517488de&language=en-US&page=1&query='.concat(this.props.query).concat('&include_adult=false&page=').concat(this.state.current_page)\n            }\n            const response = await fetch (url);\n            const data = await response.json();\n            this.setState({result: data.results, loading:false});\n            this.setState({page_count: Math.ceil(data.total_results/data.total_pages)})\n    }\n\n\n    nextPage = () => {\n\n        if(this.state.result.length !== 0){\n            this.setState({current_page: this.state.current_page+=1}, () => this.fetchData())\n        }\n    }\n\n    prevPage = () => {\n        if(this.state.result.length !== 0 && this.state.current_page !== 1){\n            this.setState({current_page: this.state.current_page-=1}, () => this.fetchData())\n        }\n    }\n    getSearchID = value => () => {\n        this.setState({id_val: value})\n    }\n\n    render(){\n            var img_url = 'https://image.tmdb.org/t/p/w300';\n            let hasPoster = this.state.result.filter(function (e) {\n                return e.poster_path !== null;\n            });\n            if(this.state.loading || !this.state.movies){\n                console.log('Loading')\n            }\n            if(this.state.id_val !== 0){\n                return(\n                    <Details id={this.state.id_val} type={this.props.is_query_movie}/>\n                )\n            }\n            else{\n            return(\n            <div>\n                <Container className = 'background'>\n                <Row>\n                {hasPoster.map(movie => (\n                    <Col key = {movie.id} className = 'Posters'> \n                        <button className = 'trending' onClick={this.getSearchID(movie.id)}>\n\n                            <img  src = {img_url.concat(movie.poster_path)} alt = 'Posters' /> \n                        </button> \n                        <p className = 'MovieName'> {movie.name}</p>\n                        <p className = 'MovieTitle'> {movie.title}</p>\n                    </Col>\n                ))}\n                </Row>\n                {this.props.display ?\n                <Row className='navigate'>\n                    <Col>\n                        <button onClick={this.nextPage}>Next</button>\n                    </Col>\n                    <Col>\n                        <button onClick={this.prevPage}>Previous</button>\n                    </Col>\n                </Row> : null}\n            </Container>\n            </div>\n        )\n        }\n    }\n};\n\nexport default Results;"]},"metadata":{},"sourceType":"module"}