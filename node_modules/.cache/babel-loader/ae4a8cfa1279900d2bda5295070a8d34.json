{"ast":null,"code":"var _jsxFileName = \"/Users/raghavsharma/movie-library/src/components/Results/index.js\";\nimport React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { Link } from 'react-router-dom';\nimport './styles.css';\n\nclass Results extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: [],\n      loading: false,\n      is_query_movie: this.props.is_query_movie,\n      offset: 0,\n      per_page: 0,\n      current_page: 1,\n      page_count: 0\n    };\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (prevProps.query !== this.props.query || prevProps.is_query_movie !== this.props.is_query_movie) {\n      let url = '';\n\n      if (this.props.is_query_movie) {\n        url = 'https://api.themoviedb.org/3/search/movie?api_key=4f02959b89ceb660d5b1018f517488de&query='.concat(this.props.query).concat('&page=').concat(this.state.page_count);\n      } else {\n        url = 'https://api.themoviedb.org/3/search/tv?api_key=4f02959b89ceb660d5b1018f517488de&language=en-US&page=1&query='.concat(this.props.query).concat('&include_adult=false');\n      }\n\n      const response = await fetch(url);\n      const data = await response.json();\n      this.setState({\n        result: data.results,\n        loading: false\n      });\n    }\n  }\n\n  nextPage() {\n    this.setState({\n      current_page: this.state.current_page + 1\n    });\n    console.log(this.state.current_page);\n  }\n\n  render() {\n    if (this.state.loading || !this.state.movies) {\n      console.log('');\n    }\n\n    console.log(this.state);\n    var img_url = 'https://image.tmdb.org/t/p/w300';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      className: \"background\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, this.state.result.map(movie => /*#__PURE__*/React.createElement(Col, {\n      key: movie.id,\n      className: \"Posters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/query\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"trending\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: img_url.concat(movie.poster_path),\n      alt: \"Posters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"MovieName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, \" \", movie.name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"MovieTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }, \" \", movie.title)))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.nextPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, \" Next \")))));\n  }\n\n}\n\n;\nexport default Results;","map":{"version":3,"sources":["/Users/raghavsharma/movie-library/src/components/Results/index.js"],"names":["React","Container","Row","Col","Link","Results","Component","constructor","props","state","result","loading","is_query_movie","offset","per_page","current_page","page_count","componentDidUpdate","prevProps","query","url","concat","response","fetch","data","json","setState","results","nextPage","console","log","render","movies","img_url","map","movie","id","poster_path","name","title"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport {Link} from 'react-router-dom'\nimport './styles.css'\n\n\nclass Results extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            result: [],\n            loading: false,\n            is_query_movie: this.props.is_query_movie,\n            offset: 0,\n            per_page: 0,\n            current_page: 1,\n            page_count: 0\n        }\n}\n    async componentDidUpdate(prevProps){\n        if(prevProps.query !== this.props.query || prevProps.is_query_movie !== this.props.is_query_movie){\n            let url = ''\n            if(this.props.is_query_movie){\n                url = 'https://api.themoviedb.org/3/search/movie?api_key=4f02959b89ceb660d5b1018f517488de&query='.concat(this.props.query).concat('&page=').concat(this.state.page_count);\n                \n            }\n            else{\n                url = 'https://api.themoviedb.org/3/search/tv?api_key=4f02959b89ceb660d5b1018f517488de&language=en-US&page=1&query='.concat(this.props.query).concat('&include_adult=false')\n            }\n            const response = await fetch (url);\n            const data = await response.json();\n            this.setState({result: data.results, loading:false});\n        }\n    }\n\n    nextPage(){\n        this.setState({current_page: this.state.current_page+1});\n        console.log(this.state.current_page);\n    }\n\n\n    render(){\n            if(this.state.loading || !this.state.movies){\n                    console.log('')\n            }\n            console.log(this.state)\n            var img_url = 'https://image.tmdb.org/t/p/w300';\n            return(\n            <div>\n                <Container className = 'background'>\n                <Row>\n                {this.state.result.map(movie => (\n                    <Col key = {movie.id} className = 'Posters'> \n                        <Link to='/query'>\n                        <button className = 'trending'>\n                            <img  src = {img_url.concat(movie.poster_path)} alt = 'Posters' /> \n                        </button>\n                        </Link>\n                        <p className = 'MovieName'> {movie.name}</p>\n                        <p className = 'MovieTitle'> {movie.title}</p>\n                    </Col>\n                ))}\n                </Row>\n\n                <Row>\n                    <Col>\n                        <button onClick={this.nextPage}> Next </button>\n                    </Col>\n                </Row>\n                \n            </Container>\n            </div>\n        )\n    }\n};\n\nexport default Results;"]},"metadata":{},"sourceType":"module"}