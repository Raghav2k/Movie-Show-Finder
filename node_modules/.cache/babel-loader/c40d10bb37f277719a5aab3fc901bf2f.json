{"ast":null,"code":"var _jsxFileName = \"/Users/raghavsharma/Movie-Show-Finder/src/components/Homepage/index.js\";\nimport React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Details from '../Details';\nimport { Link } from 'react-router-dom';\nimport './styles.css';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getID = (value, type) => () => {\n      this.setState({\n        item_id: value\n      });\n      this.setState({\n        ismovie: type\n      });\n    };\n\n    this.state = {\n      movies: [],\n      loading: false,\n      item_id: 0,\n      ismovie: true\n    };\n  }\n\n  async componentDidMount() {\n    const url = \"https://api.themoviedb.org/3/trending/all/day?api_key=4f02959b89ceb660d5b1018f517488de\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      movies: data.results,\n      loading: false\n    });\n  }\n\n  render() {\n    let hasPoster = this.state.movies.filter(function (e) {\n      return e.poster_path !== null;\n    });\n    var img_url = 'https://image.tmdb.org/t/p/w300';\n\n    if (this.state.loading || !this.state.movies) {\n      console.log('Loading');\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      className: \"background\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, hasPoster.map(movie => /*#__PURE__*/React.createElement(Col, {\n      key: movie.id,\n      className: \"Posters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: `/details/${movie.id}`,\n        aboutProps: {\n          id: movie.id,\n          latest_type: movie.media_type\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: img_url.concat(movie.poster_path),\n      alt: \"Posters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"MovieName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }\n    }, \" \", movie.name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"MovieTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    }, \" \", movie.title))))));\n  }\n\n}\n\n;\nexport default Home;","map":{"version":3,"sources":["/Users/raghavsharma/Movie-Show-Finder/src/components/Homepage/index.js"],"names":["React","Container","Row","Col","Details","Link","Home","Component","constructor","props","getID","value","type","setState","item_id","ismovie","state","movies","loading","componentDidMount","url","response","fetch","data","json","results","render","hasPoster","filter","e","poster_path","img_url","console","log","map","movie","id","pathname","aboutProps","latest_type","media_type","concat","name","title"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Details from '../Details'\nimport {Link} from 'react-router-dom'\nimport './styles.css'\n\nclass Home extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            movies:[],\n            loading:false,\n            item_id: 0,\n            ismovie: true\n        }\n    }\n    async componentDidMount(){\n        const url = \"https://api.themoviedb.org/3/trending/all/day?api_key=4f02959b89ceb660d5b1018f517488de\";\n        const response = await fetch(url);\n        const data = await response.json();\n        this.setState({movies: data.results, loading:false});\n    }\n\n    getID  = (value, type) => () => {\n        this.setState({item_id: value})\n        this.setState({ismovie: type})\n    }\n\n    render(){\n\n        let hasPoster = this.state.movies.filter(function (e) {\n            return e.poster_path !== null;\n        });\n        var img_url = 'https://image.tmdb.org/t/p/w300';\n        if(this.state.loading || !this.state.movies){\n            console.log('Loading');\n        }\n        return( \n            <div>\n                <Container className = 'background'>\n                    <Row>\n                    {hasPoster.map(movie => (\n                        <Col key = {movie.id} className = 'Posters'>\n                            <Link to={{\n                            pathname:`/details/${movie.id}`,\n                            aboutProps: {\n                                id: movie.id,\n                                latest_type: movie.media_type\n                            }\n                        }}> \n                                <img  src = {img_url.concat(movie.poster_path)} alt = 'Posters' /> \n                            </Link>\n                            <p className = 'MovieName'> {movie.name}</p>\n                            <p className = 'MovieTitle'> {movie.title}</p>\n                        </Col>\n                    ))}\n                    </Row>\n                </Container>\n            </div>    \n        )\n    }\n};\nexport default Home;\n\n"]},"metadata":{},"sourceType":"module"}